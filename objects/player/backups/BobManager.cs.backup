using Godot;

public partial class BobManager : Node3D
{
	// Nodes
	[Export] private FootstepManager footstepManager;
	
	// Signals
	[Signal] public delegate void FootstepEventHandler();

	#region Built-in
	public override void _Ready() => startPos = Position;
	public override void _Process(double delta) {
		float intensity = player.Velocity.Combined();
		
		intensity = (player.IsOnFloor() ? intensity : 0f);
		Position = startPos + FootstepMotion((float) delta, intensity);
		Rotation = Rotation.SetZ(Mathf.Sin(time * Frequency) * (Amplitude / 6));
	}
	#endregion

	private Vector3 FootstepMotion(float delta, float intensity) {
		if (intensity < 0.5f)
			time = delta * 2.5f; // Mathf.Lerp(time, 0f, 1.5f * (float) delta)
		else
			time += delta * 5f;

		var sine = Mathf.Sin(time * Frequency);
		var bob = Mathf.Abs(sine) * (Amplitude / 2);
		if (Mathf.RoundToInt(bob * 210) == 0) {
			if (time != 0) {
				EmitSignal(nameof(Footstep));
			}
			time = 0.00f;
		}

		return (Vector3.Up * bob) * intensity;
	}
}
